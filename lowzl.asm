.MODEL SMALL
.386  ;FOR DOSBOX
.STACK 64
.DATA 

	MSG1 	DB 13,10,13,10,"ENTER THE CHOICE OF OPERATION ,N TO EXIT $",13,10
	MSG2 	DB 13,10,"a.ADDITION $"
	MSG3 	DB  13,10,"b.SUBTRACTION  $"
	MSG4 	DB  13,10,"c.MULTIPLICATION  $"
	MSG5 	DB  13,10,"d.DIVISION  $"
	MSG9 	DB	13,10,"e.EXPONENTS  $"
	MSG10 	DB 	13,10,"f.SQUARE ROOTS  $"
	MSG11 	DB 	13,10,"g.FACTORIAL  $"
	MSG12 	DB 	13,10,"h.NPR probability  $"
	MSG13 	DB 	13,10,"j.NCR probability  $"
	MSGC 	DB  13,10,"CHOICE:  $"
	MSG6 	DB  13,10,"ENTER THE OPERAND1=  $"
	MSG7 	DB  13,10,"ENTER THE OPERAND2=  $"
	MSGMUP 	DB  13,10,"ENTER THE MULPLICAND=  $"
	MSGMUY 	DB  13,10,"ENTER THE MULTIPLYER=  $"
	MSGDID 	DB  13,10,"ENTER THE DIVIDEND= $"
	MSGDIS	DB 	13,10,"ENTER THE DIVISOR= $"
	MSGFAC	DB 	13,10,"ENTER THE NUMBER FOR FACTORIAL= $"
	MSGEXO1	DB 	13,10,"THE MAXIMUM POWER IS 5 FOR BASE NUMBER 1 TO 6$"
	MSGEXO2	DB 	13,10,"THE MAXIMUM POWER IS 3 FOR BASE NUMBER 1 TO 21 $"
	MSGMUL	DB	13,10,"THE OPERAND SHOULD NOT EXCEED 2 DIGIT(maximum 99) FOR EITHER 1 OPERAND= $"
	MSGSUB	DB 	13,10,"ALL DIGIT ACCEPTED $"
	MSG8	DB 	13,10,"THE RESULT IS= $"
	MSGDIVLIM1	DB	13,10,"THE MAXIMUM DIVISOR IS 999$"
	MSGFACLIM1	DB	13,10,"THE MAXIMUM INPUT IS 8$"
	MSGEXO3		DB	13,10,"THE BASE IS=$"
	MSGEXO4		DB	13,10,"THE POWER IS= $"
	MSGWARN		DB  13,10,"accept 6 digits,NO DECIMAL & NEGATIVE $"
	MSGWARN1	DB  13,10,"accept 3 digits,NO DECIMAL & NEGATIVE $"
	MSGWARN2	DB  13,10,13,10,"DO NOT FILL SPACE OR ENTER,FILL ZERO OR DIGIT $"
	MSGSQR		DB	13,10,"THE MAXIMUM OPERAND IS 841$"
	MSGV		DB	13,10,13,10,"INVALID INPUT $"
	MSGNPR		DB	13,10,"THE 2ND OPERAND MUST LESS THAN  1ST OPERAND BY 2$"
	MSGONPR		DB  13,10,"ENTER THE VALUE FOR NPR= $"
	MSGONPR1	DB  13,10,"ENTER THE VALUE FOR NCR= $"
	MSGV1		DB	"T","U","P","N","I"," ", "D","I","L","A","V","N","I"," "
	EXP 		DB 	1,7,2
	CHECK 		DB 0
	CHECK2 		DB 0
	CHECK3 		DB 0
	CHECK4 		DB 0
	CHECK5 		DB 0
	CHECK1 		DB 0
	CHOICE		DB 0
	OP1			DB	0,0,0,0,0,0
	OP2			DB 0,0,0,0,0,0
	MUT1 		DB 0,0,0
	MUT2 		DB 0,0,0
	MUTOP1 		DB 0,0,0
	MUTOP2 		DB 0,0,0
	SQR 		DB 0
	TTL 		DB 0,0,0,0,0,0,0,0,0,0,0,0
	ADD1 		DB 0,0,0,0,0,0
	ADD2 		DB 0,0,0,0,0,0
  	QUO 		DW 0
	QUO2 		DB 0
	QUO3 		DB 0
	QUO4 		DB 0
	QUO5 		DB 0
	QUO1 		DB 0
	
	REM 		DW 0
	REM2 		DB 0
	REM3 		DB 0
	REM4 		DB 0
	REM5 		DB 0
	REM1 		DW 0
	;------------------
	RES1 		DB 0
	RES2 		DB 0
	RES3 		DB 0
	RES4 		DB 0
	RES5 		DB 0
	RESMU 		DB 0
	RESMU1 		DB 0
	RESMU2 		DW 0
	RESMU3 		DW 0
	RESMU4 		DW 0
	RESMU5 		DW 0
	RES 		DB 0
	RES6 		DB 0
	RESM3		DW 0
	RESM2 		DW 0
	RESM 		DW 0
	ONE 		DB 1
	TEN			DB	10
	TEN2 		DW 	10
	HUN 		DB	100
	THOU 		DW	1000
	TENTHOU		DW	10000
	MTC1 		DB 0
	MTC2 		DB 0
	FIN  		DW 0,0,0,0,0,0
	TEN3 		DW 10H
	FOUR 		DW 4
	TEN4 		DB 10
	RESDI 		DB 0
	RESDI2 		DB 0
	RESDI3 		DB 0
	RESDI4		DB 0
	RESDI5		DB 0
	TEMP   		DW 0
	CHECK51 	DW 0
	REMD		DB 0
	QUOD		DB 0
	REMD1		DB 0
	QUOD1		DB 0
	TEMP1 		DB 0  ;FUNCTIONAL IN DIV
	TEMP2 		DB 0
	TEMP3		DB 0
	QUODI		DW 0
	REMDI		DW 0
	QUODI1		DW 0
	REMDI1		DW 0
	TEMP4		DW 0
	
	
.CODE 


MAIN PROC

	MOV AX,@DATA
	MOV DS,AX
	JMP B5
	

	
B5:	
	
	;OUTPUT MSG1 AH:09
	MOV AH, 09H
	LEA DX,MSG1
	INT 21H
	
	;OUTPUT MSG2 AH:09
	MOV AH, 09H
	LEA DX,MSG2
	INT 21H
	
	;OUTPUT MSG3 AH:09
	MOV AH, 09H
	LEA DX,MSG3
	INT 21H
	
	;OUTPUT MSG4 AH:09
	MOV AH, 09H
	LEA DX,MSG4
	INT 21H
	
	;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG5
	INT 21H
	
	
	
	;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG9
	INT 21H	
		
		
	;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG10
	INT 21H
			
			
		;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG11
	INT 21H
		

		;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG12
	INT 21H		
		
	;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSG13
	INT 21H		
					
	;OUTPUT MSG5 AH:09
	MOV AH, 09H
	LEA DX,MSGC
	INT 21H
		
	
		
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV CHOICE,AL	
	
	;COMPARE THE INPUT WITH CHOICE	
	;-----------ADDITION
	CMP CHOICE,"a"
	JZ C1
	JNZ C2C	
	
B4:JMP B5		
C1:	

  ;-----------------INPUT FOR OPERAND 1-----------
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN
	INT 21H
	
	
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSG6
	INT 21H

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[0],AL
	

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[1],AL
	

	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[2],AL
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[3],AL
	

	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[4],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[5],AL
	
	
	;------------VALIDATION-------------
	
	
	
	MOV BX,0
	MOV CX,6
	
V1:
	CMP OP1[BX],3AH
	INC BX
	JA PROM
	LOOP V1
	JMP V1A
PROM:  

	
	MOV AH, 09H
	LEA DX, MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR

	JMP C1
	
V1A:
	MOV BX,0
	MOV CX,6
	JMP V1BA
	
V1BA:
	CMP OP1[BX],30H
	INC BX
	JB PROM1A
	LOOP V1BA
	JMP C1S
	
PROM1A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	
	MOV SI,0
	MOV CX,14
ARR2:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR2
	JMP C1	
	
	
	
	
	
C2C:JMP C2C1
	
C1S:
	;--------------CONVERT INPUT TO DECIMAL----------
	
	SUB OP1[0],30H
	SUB OP1[1],30H
	SUB OP1[2],30H
	SUB OP1[3],30H
	SUB OP1[4],30H
	SUB OP1[5],30H
	JMP C1A

C2C1:JMP C2B	
	

C1A:

	;----------INPUT FOR 2ND OPERAND-------

	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSG7
	INT 21H
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[1],AL
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[2],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[3],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[4],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[5],AL
	
	
	;------------VALIDATION-------------
	
	
	
	MOV BX,0
	MOV CX,6
	
V2:
	CMP OP2[BX],3AH
	INC BX
	JA PROM2
	LOOP V2
	JMP V1B
	
PROM2:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR3:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR3	
	
	JMP C1A	

V1B:
	MOV BX,0
	MOV CX,6
	JMP V11B
	
V11B:
	CMP OP2[BX],30H
	INC BX
	JB PROM1B
	LOOP V11B
	JMP S2
	
PROM1B:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR4:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR4	
	JMP C1A	
	
	
	
	;---------CONVERT OPERAND 2 TO DECIMAL----------
S2:	SUB OP2[0],30H
	SUB OP2[1],30H
	SUB OP2[2],30H
	SUB OP2[3],30H
	SUB OP2[4],30H
	SUB OP2[5],30H
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE  VALUE
	MOV AX,0
	MOV AL ,OP1[0] 
	ADD AL,OP2[0]
	MOV RES,AL
	MOV AH,0
	AAA
	CMP RES,9H
	JA E6
	JB A1
	
	
E6: 
	MOV AL,RES
	SUB AL,9H
	SUB AL,1H
	MOV RES,AL
	
	MOV AX,0
	MOV AH,0
	MOV AL,0
	MOV AL,RES6
	MOV AL,31H
	MOV RES6,AL
	
	

				
	
	
	
A1:	MOV AL ,OP1[1] 
	ADD AL,OP2[1]
	MOV RES1,AL
	MOV AH,0
	AAA
		
	CMP RES1,9H
	JA E5
	JB A2
	
	
E5: 
	MOV AL,RES1
	SUB AL,9H
	SUB AL,1H
	MOV RES1,AL
	MOV AX,0
	MOV AL,RES
	ADD AL,1H
	MOV RES,AL
	
	

			
	
	
	
A2:
	MOV AL ,OP1[2] 
	ADD AL,OP2[2]
	MOV RES2,AL
	MOV AH,0
	AAA
	CMP RES2,9H
	JA E4
	JB A3
	
E4: 
	MOV AL,RES2
	SUB AL,9H
	SUB AL,1H
	MOV RES2,AL
	MOV AX,0
	MOV AL,RES1
	ADD AL,1H
	MOV RES1,AL
	
	
	
		
	
	
A3:	MOV AL ,OP1[3] 
	ADD AL,OP2[3]
	MOV RES3,AL
	MOV AH,0
	AAA
	CMP RES3,9H
	JA E3
	JB A4
	
	
E3: 
	MOV AL,RES3
	SUB AL,9H
	SUB AL,1H
	MOV RES3,AL
	MOV AX,0
	MOV AL,RES2
	ADD AL,1H
	MOV RES2,AL
	
	
	
	
	
	
A4:	MOV AL ,OP1[4] 
	ADD AL,OP2[4]
	MOV RES4,AL
	MOV AH,0
	AAA
	CMP RES4,9H
	JA E1
	JB A5
	
E1: 
	MOV AL,RES4
	SUB AL,9H
	SUB AL,1H
	MOV RES4,AL
	MOV AX,0
	MOV AL,RES3
	ADD AL,1H
	MOV RES3,AL
	
	

	
	
	
A5:	MOV AL ,OP1[5] 
	ADD AL,OP2[5]
	MOV RES5,AL
	MOV AH,0
	AAA
	CMP RES5,9H
	JA E2
	JB C1B

E2: 
	MOV AL,RES5
	SUB AL,9
	SUB AL,1
	MOV RES5,AL
	MOV AX,0
	MOV AL,RES4
	ADD AL,1H
	MOV RES4,AL
	
	

	
	;--------------------------
	
	
		


	
	JMP C1B
	
C2B:JMP C2A	
	
	
C1B:


	
	JMP C1C
	
	
	
	
	
C2A:JMP C2	
	
	
C1C:

	;-------CONVERT DECIAML TO ASCII-----

	MOV AX,0
	ADD RES,30H   ;2h
	ADD RES1,30H		;3h
	ADD RES2,30H
	ADD RES3,30H
	ADD RES4,30H
	ADD RES5,30H
	;ADD RES6,30H

	;------------OUTPUT------------
	
	;OUTPUT MSG8 AH:09
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	MOV AH,0
	MOV AL,0
	MOV AH,02H
	MOV DL,RES6  ;6
	INT 21H




	MOV AX,0H
	MOV AH,02H
	MOV DL,RES
	INT 21H
	

	
	MOV AX,0H
	
	MOV AH,02H
	MOV DL,RES1
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,RES2
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,RES3
	INT 21H
	
	MOV AX,0H	
	MOV AH,02H
	MOV DL,RES4
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,RES5   ;6
	INT 21H


B3:JMP B4

   ;--------------SUBTRACTION-------------

	
C2: CMP CHOICE,"b"
	JZ C3
	JNZ C3A

C3: 
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H
	
	
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN
	INT 21H
	
	MOV AH, 09H
	LEA DX,MSGSUB
	INT 21H


	;OUTPUT MSG6 AH:09

  ;PRONLEM
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSG6
	INT 21H

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[0],AL
	
	
	        
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[1],AL
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[2],AL
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[3],AL
	
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[4],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV OP1[5],AL
	
	
	
	;------------VALIDATION-------------
	
	
	
	MOV BX,0
	MOV CX,6
	
V3:
	CMP OP1[BX],3AH
	INC BX
	JA PROM3
	LOOP V3
	JMP VA1
	
PROM3:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR5:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR5	
	JMP C3
	
	
VA1:
	MOV BX,0
	MOV CX,6
	JMP VA2
	
VA2:
	CMP OP1[BX],30H
	INC BX
	JB PROM3A
	LOOP VA2
	JMP C22
	
PROM3A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR6:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR6
	JMP C3
	
	
C3A:JMP C3F	
	
C22:
	SUB OP1[0],30H
	SUB OP1[1],30H
	SUB OP1[2],30H
	SUB OP1[3],30H
	SUB OP1[4],30H
	SUB OP1[5],30H
	
	
	;INPUT FOR 2ND OPERAND-------------------

C3S:	
	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSG7
	INT 21H
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[1],AL
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[2],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[3],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[4],AL
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV OP2[5],AL
	
	
		;------------VALIDATION-------------
	
	MOV BX,0
	MOV CX,6
	
V4:
	CMP OP2[BX],3AH
	INC BX
	JA PROM4
	LOOP VA4
	JMP S4
	
PROM4:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR7:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR7
	JMP C3S
	
VA4:
	MOV BX,0
	MOV CX,6
	JMP VA5
	
VA5:
	CMP OP2[BX],30H
	INC BX
	JB PROM5BA
	LOOP VA5
	JMP S4
	
PROM5BA:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR8:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR8	
	JMP C3S	
	
	
	
	
S4:
	SUB OP2[0],30H
	SUB OP2[1],30H
	SUB OP2[2],30H
	SUB OP2[3],30H
	SUB OP2[4],30H
	SUB OP2[5],30H
	JMP C3SUB
	
C3F:JMP C3H		

C3SUB:

	MOV AL,OP1[0]
	CMP AL,OP2[0]
	JA C3SUB1
	JB C3SUBA
	
	
C3SUB1:
	MOV AX,0
	MOV AL,OP1[0]
	MOV CHECK,AL
	MOV AX,0
	MOV AL,OP1[1]
	MOV CHECK1,AL
	MOV AX,0
	MOV AL,OP1[2]
	MOV CHECK2,AL
	MOV AX,0
	MOV AL,OP1[3]
	MOV CHECK3,AL
	MOV AX,0
	MOV AL,OP1[4]
	MOV CHECK4,AL
	MOV AX,0
	MOV AL,OP1[5]
	MOV CHECK5,AL
	
	
	MOV AX,0
	MOV AL ,OP1[5] 
	
	MOV AH,0
	;AAA
	CMP AL,OP2[5]
	JB E26
	SUB AL,OP2[5]
	MOV RES,AL
	JMP A21
	


E26: 
	MOV AL,OP1[5]
	CMP AL,0H
	JZ EQL
	JNZ GTR
	
EQL:
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[5]
	
	MOV RES,AL
	
	MOV AX,0
	MOV AL,OP1[4]
	CMP AL,0H
	JZ EQZ
	JNZ GRZ
	

	
	

GRZ:

	MOV AL,OP1[4]
	SUB AL,1H
	MOV OP1[4],AL
	JMP A21

EQZ:
	MOV OP1[4],9H
	JMP A21
	
	
GTR:
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[5]
	
	MOV RES,AL
	
	MOV AX,0
	MOV AL,OP1[4]
	CMP AL,0H
	JZ EQZ
	JNZ GRZ
	JMP A21
	

				
	
	
	
A21:	
	MOV AL ,OP1[4] 
	
	;MOV AH,0
	;AAA
		
	CMP AL,OP2[4]
	JB E25
	SUB AL,OP2[4]
	MOV RES1,AL
	
	JMP A22
	
E25: 
	
	MOV AL,OP1[4]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[4]
	MOV RES1,AL
	JMP MIN

MIN:
	MOV AX,0
	MOV AL,OP1[3]
	CMP AL,0H
	JNZ GRZ1
	JZ  EQZ1
	
GRZ1:
	MOV AL,OP1[3]
	SUB AL,1H
	MOV OP1[3],AL
	JMP A22
	
EQZ1:
	MOV OP1[3],0AH    ;////0AH
	
	JMP A22


C3SUBA:JMP C3SUB2			
	
	
	
A22:
	
	MOV AL,CHECK4
	CMP AL,0H
	JZ CZ
	JNZ Z
	
Z:
	MOV AL ,OP1[3] 
	CMP AL,OP2[3]
	JB E24
	SUB AL,OP2[3]
	MOV RES2,AL
	JMP A23
	
E24: 
	MOV AL ,OP1[3] 
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[3]
	MOV RES2,AL
	JMP MIN1
	
CZ:	
	MOV AL ,OP1[3] 
	CMP AL,0H
	JZ E24E
	JNZ ZSUB
	
ZSUB:
	  MOV AL ,OP1[3] 
	  SUB AL,01H
	  MOV OP1[3],AL
	  JMP Z
	
E24E: 
	MOV AL ,OP1[3] 
	ADD AL,09H
	SUB AL,OP2[3]
	MOV RES2,AL	
	JMP A23
	
MIN1:
	MOV AX,0
	;MOV AL,OP1[2]
	;SUB AL,1H
	MOV OP1[2],AL
	CMP AL,0H
	JNZ GRZ2
	JZ  EQZ2
	
GRZ2:
	MOV AL,OP1[2]
	SUB AL,1H
	MOV OP1[2],AL
	JMP A23
	
EQZ2:
	MOV OP1[2],9H
	JMP A23
	
A23:	

	MOV AL,CHECK3
	CMP AL,0H
	JZ CZ1
	JNZ Z1

Z1:
	MOV AL ,OP1[2] 
	CMP AL,OP2[2]
	JB E23
	SUB AL,OP2[2]
	MOV RES3,AL
	JMP A24
	
CZ1:	
	MOV AL ,CHECK2 ;OP1[2] 
	CMP AL,0H
	JZ E23E	
	JNZ ZSUB1
	
ZSUB1:
	  MOV AL ,OP1[2] 
	  SUB AL,01H
	  MOV OP1[2],AL
	  JMP Z1

	
E23E: 
	MOV AL ,OP1[2] 
	ADD AL,9H
	SUB AL,OP2[2]
	MOV RES3,AL	
	JMP A24
	
E23: 
	MOV AL,OP1[2]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[2]
	MOV RES3,AL
	JMP MIN2
	
MIN2:
	MOV AX,0
	MOV AL,OP1[1]
	;SUB AL,1H
	;MOV OP1[1],AL
	CMP AL,0H
	JNZ GRZ3
	JZ  EQZ3
	
GRZ3:
	MOV AL,OP1[1]
	SUB AL,1H
	MOV OP1[1],AL
	JMP A24
	
EQZ3:
	MOV OP1[1],9H
	JMP A24
;C3G:JMP C3H	
	
	
	
A24:	

	MOV AL,CHECK2
	CMP AL,0H
	JZ CZ2
	JNZ Z2
Z2:

	MOV AL ,OP1[1] 
	CMP AL,OP2[1]
	JB E21
	SUB AL,OP2[1]
	MOV RES4,AL
	JMP A25


CZ2:
	MOV AL ,OP1[1] 
	CMP AL,0H
	JZ E21E
	JNZ ZSUB2

ZSUB2:
	  MOV AL ,OP1[1] 
	  SUB AL,01H
	  MOV OP1[1],AL
	  JMP Z2
	

E21E:
	MOV AL ,OP1[1] 
	ADD AL,9H
	SUB AL,OP2[1]
	MOV RES4,AL	
	JMP A25
		
	
E21: 

	MOV AL,OP1[1]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP2[1]
	MOV RES4,AL
	JMP MIN3
	
MIN3:
	MOV AX,0
	MOV AL,OP1[0]
	CMP AL,0H
	JNZ GRZ4
	
	
GRZ4:
	MOV OP1[0],AL
	SUB AL,1H
	MOV OP1[0],AL
	JMP A25
	

	

	
	
	
A25:	
	MOV AL,CHECK1
	CMP AL,0H
	JZ CZ3
	JNZ Z3	
	
	
CZ3:
	MOV AL ,OP1[0] 
	SUB AL,01H
	MOV OP1[0],AL 
	JMP Z3	
	
Z3:
	MOV AL ,OP1[0] 
	SUB AL,OP2[0]
	MOV RES5,AL
	;JA C23
	MOV AX,0
	MOV AL,RES6
	MOV AL,0
	MOV RES6,AL
	JMP C23




C3SUB2:	
	MOV AX,0
	MOV AL,OP2[0]
	MOV CHECK,AL
	MOV AX,0
	MOV AL,OP2[1]
	MOV CHECK1,AL
	MOV AX,0
	MOV AL,OP2[2]
	MOV CHECK2,AL
	MOV AX,0
	MOV AL,OP2[3]
	MOV CHECK3,AL
	MOV AX,0
	MOV AL,OP2[4]
	MOV CHECK4,AL
	MOV AX,0
	MOV AL,OP2[5]
	MOV CHECK5,AL	




	MOV AX,0
	MOV AL ,OP2[5] 
	CMP AL,OP1[5]
	JB E262
	MOV AL ,OP2[5] 
	SUB AL,OP1[5]
	MOV RES,AL
	JMP A212
	


E262: 
	MOV AL,OP2[5]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP1[5]
	
	MOV RES,AL
	
	MOV AX,0
	MOV AL,OP2[4]
	CMP AL,0H
	JZ EQZS
	JNZ GRZS

GRZS:
	MOV OP2[4],AL
	SUB AL,1H
	MOV OP2[4],AL
	JMP A212

EQZS:
	MOV OP2[4],9H
	JMP A212
	
A212:	
	MOV AL ,OP2[4] 
	
	;MOV AH,0
	;AAA
		
	CMP AL,OP1[4]
	JB E252
	MOV AL ,OP2[4] 
	SUB AL,OP1[4]
	MOV RES1,AL
	JMP A222
	
	
	
E252: 
	MOV AL,OP2[4]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP1[4]
	MOV RES1,AL
	JMP MINS
	
MINS:
	MOV AX,0
	MOV AL,OP2[3]
	CMP AL,0H
	JZ EQZS1
	JNZ GRZS1

GRZS1:
	MOV OP2[3],AL
	SUB AL,1H
	MOV OP2[3],AL
	JMP A222

EQZS1:
	MOV OP2[3],0AH
	JMP A222
	
A222:

	MOV AL,CHECK4
	CMP AL,0H
	JZ  CAZ
	JNZ AZ

AZ:
	MOV AL ,OP2[3] 
	CMP AL,OP1[3]
	JB E242
	MOV AL ,OP2[3] 
	SUB AL,OP1[3]
	MOV RES2,AL
	JMP A232

CAZ:
	MOV AL ,OP2[3] 
	CMP AL,0H
	JZ E242E
	JNZ AZSUB

E242E:	
	MOV AL ,OP2[3] 
	ADD AL,09H
	SUB AL,OP1[3]
	MOV RES2,AL	
	JMP A23
	


AZSUB:	
	  MOV AL ,OP2[3] 
	  SUB AL,01H
	  MOV OP2[3],AL
	  JMP AZ	
	
E242: 
	MOV AL ,OP2[3] 
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP1[3]
	MOV RES2,AL
	JMP MINS1
	
MINS1:
	MOV AX,0
	MOV AL,OP2[2]
	CMP AL,0H
	JZ EQZS2
	JNZ GRZS2

GRZS2:
	MOV AL,OP2[2]
	SUB AL,1H
	MOV OP2[2],AL
	JMP A232

EQZS2:
	MOV OP2[2],9H
	JMP A232
	
	
A232:	
	MOV AL,CHECK3
	CMP AL,0H
	JZ CAZ1
	JNZ AZ1

AZ1:
	MOV AL ,OP2[2] 
	
	CMP AL,OP1[2]
	JB E232
	MOV AL ,OP2[2] 
	SUB AL,OP1[2]
	MOV RES3,AL
	JMP A242
	
CAZ1:	
	MOV AL,CHECK2
	CMP AL,0H
	JZ E232E	
	JNZ AZSUB1	

E232E: 
	MOV AL ,OP2[2]
	ADD AL,9H
	SUB AL,OP1[2]
	MOV RES3,AL	
	JMP A242
	
AZSUB1:
	  MOV AL ,OP2[2] 
	  SUB AL,01H
	  MOV OP2[2],AL
	  JMP AZ1

	
	
E232: 
	MOV AL,OP2[2]
	ADD AL,9H
	ADD AL,1H
	SUB AL,OP1[2]
	MOV RES3,AL
	JMP MINS2
	
MINS2:
	MOV AX,0
	MOV AL,OP2[1]
	CMP AL,0H
	JZ EQZS3
	JNZ GRZS3

GRZS3:
	MOV OP2[1],AL
	SUB AL,1H
	MOV OP2[1],AL
	JMP A242

EQZS3:
	MOV OP2[1],9H
	JMP A242
	
	
A242:	
	MOV AL,CHECK2
	CMP AL,0H
	JZ CAZ2
	JNZ AZ2



AZ2:
	MOV AL ,OP2[1] 
	CMP AL,OP1[1]
	JB E212
	MOV AL ,OP2[1] 
	SUB AL,OP1[1]
	MOV RES4,AL
	JMP A252

CAZ2:
	MOV AL ,OP2[1] 
	
	CMP AL,0H
	JZ E212E
	JNZ AZSUB2	
	
AZSUB2:
	  MOV AL ,OP2[1] 
	  SUB AL,01H
	  MOV OP2[1],AL
	  JMP AZ2	
	  
E212E:
	MOV AL ,OP2[1] 
	
	MOV AL,9H   
	SUB AL,OP1[1]
	MOV RES4,AL	
	JMP A252
			  
	
E212: 
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV AL,OP2[1]
	ADD AL,9H
	ADD AL,1H
	
	SUB AL,OP1[1]
	;-------------PROBLEM
	;---------------
	MOV TEMP2,AL
	MOV RES4,AL
	JMP MINS3
	
	
MINS3:
	MOV AX,0
	MOV AL,OP2[0]
	CMP AL,0H
	
	JNZ GRZS4

GRZS4:
	MOV OP2[0],AL
	SUB AL,1H
	MOV OP2[0],AL
	JMP A252


	
	
A252:	
	MOV AL,CHECK1
	CMP AL,0H
	JZ CAZ3
	JNZ AZ3	
	
CAZ3:
	MOV AL ,OP2[0] 
	SUB AL,01H
	MOV OP2[0],AL 
	JMP AZ3	

AZ3:
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV AL ,OP2[0] 
	SUB AL,OP1[0]
	;-------------PROBLEM
	;---------------
	MOV TEMP3,AL
	MOV RES5,AL
	MOV AX,0
	MOV AH,0
	MOV AL,0
	MOV AL,2DH
	MOV RES6,AL
	
	
	JMP C23
	
	;--------------------------
	
	
		


	
	;JMP C23
	
C23:

	MOV AX,0
	
	;MOV AL,OP1
	;;ADD AL,OP2
	;MOV TTL,AL
	;ADD TTL,30H

	ADD RES,30H   ;2h
	ADD RES1,30H		;3h
	ADD RES2,30H
	ADD RES3,30H
	ADD RES4,30H
	ADD RES5,30H
	;ADD RES6,30H

	
	
	;OUTPUT MSG8 AH:09
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,RES6  ;6
	INT 21H




	MOV AX,0H
	MOV AH,02H
	MOV DL,RES5
	INT 21H
	

	
	MOV AX,0H
	
	MOV AH,02H
	MOV DL,RES4
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,RES3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,RES2
	INT 21H
	
	MOV AX,0H	
	MOV AH,02H
	MOV DL,RES1
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,RES   ;6
	INT 21H


	

C3H:JMP C4
	
	
	
	JMP C9

B2:JMP B3

	;--------------MULTIPLICATION--------

C4:CMP CHOICE,"c"
	JZ C5
	JNZ C5A

C5:  
	;-------------INPUT FOR 1ST OPERAND-----
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H


	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H

	MOV AH, 09H
	LEA DX,MSGMUL
	INT 21H


	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGMUP
	INT 21H

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[0],AL
	
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[1],AL
	
		
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[2],AL
	
	
		;------------VALIDATION-------------
	
	MOV BX,0
	MOV CX,3
	
V5:
	CMP MUT1[BX],3AH
	INC BX
	JA PROM5
	LOOP V5
	JMP V5A
	
PROM5:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR9:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR9	
	JMP C5
		
V5A:
	MOV BX,0
	MOV CX,3
	JMP V51A
	
V51A:
	CMP MUT1[BX],30H
	INC BX
	JB PROM5A
	LOOP V51A
	JMP S5
	
PROM5A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR10:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR10
	JMP C5	
	





	
C5A:JMP C5A1	
	
S5:	SUB MUT1[0],30H
	SUB MUT1[1],30H
	SUB MUT1[2],30H
	
	
	;---------INPUT FOR 2ND OPERAND-------------------
C6A:
	MOV AH, 09H
	LEA DX,MSGMUY
	INT 21H
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
			;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V6:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM6
	LOOP V6
	JMP V6A
	
PROM6:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR11:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR11
	JMP C6A
		

V6A:
	MOV BX,0
	MOV CX,3
	JMP V61A
	
V61A:
	CMP MUT2[BX],30H
	INC BX
	JB PROM6A
	LOOP V61A
	JMP S6A1
	
PROM6A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR12:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR12	
	JMP C6A	
	
	
	
S6A1:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	
	
	JMP C5M
	
	
C5A1:JMP C5B		

	;--------------------------
C5M:
	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE  VALUE
	MOV AL ,MUT1[0]
	MUL HUN
	
	MOV MUTOP1[0],AH 
	MOV MUT1[0],AL
	;--------------
	
	
	;AAM
	;MOV OP2[0],AL
	;MOV AL ,OP2[0]
	;MUL TEN
	;MOV OP2[0],AL
	;MOV AL ,OP2[0]
	;MUL HUN

	
	MOV AL ,MUT1[1]
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP1[1],AH
	MOV MUT1[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT1[0]
	MOV CH,MUTOP1[0]
	MOV AL,MUT1[1]
	MOV AH,MUTOP1[1]
	
	ADD AX,CX
	
	MOV MUT1[1],AL
	MOV MUTOP1[1],AH
	

	MOV AH,MUTOP1[1]
	MOV AL ,MUT1[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT1[1]
	MOV MUT1[2],AL
	
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	
	
	;AAM
	;MOV OP2[0],AL
	;MOV AL ,OP2[0]
	;MUL TEN
	;MOV OP2[0],AL
	;MOV AL ,OP2[0]
	;MUL HUN

	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	
;------------------MULTIPLY BOTH THE OPERANDS---------	
	
	MOV CL,MUT1[2]
	;MOV MTC2,AL
	MOV CH,MUTOP1[1]
	
	MOV AL,MUT2[2]
	;MOV MTC2,AL
	MOV AH,MUTOP2[1]
	;MOV 
	
	;MOV AL,MTC1
	MUL CX
	;AAM
	;AAM
	MOV RESM,AX    ;9CH
	;MOV RES,AL   ;40h
	MOV RESM2,AX

	
	

	;fail!!!!!
	;MOV CL,8
	;SHL RESM,CL


;----------------DIVIDE THE RESULTS TO GET-------- 
;----------THE REMAINDER TO BE CONVERTED TO--------- 
;----------ASCII VALUE ---------------

	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	MOV AX,RESM
	
	;MUL HUN
	;MOV RESM,AL
	;MOV CL,RES
	;ADD AL,RES
	;MOV FIN,AL
	;MOV AX,CX

	;MOV AL,FIN
	DIV TEN2
	;AAD  
	MOV REM,DX     ;23H
	;MOV CHECK,AL
	
	MOV QUO,AX   ;28H
	
	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	CMP QUO,00FFH
	JB SINGLE 
	JA DOUBLE
	;MOV AX,0
	;MOV AH,REM
	;MOV CH,00H
	;MOV AX,QUO
	;MOV AX,QUO
	
	;MOV AX,CX
	;DIV TEN2
	;AAD
	;MOV QUO1,AX  ;0
	;--------------DIVIDE THE FIRST QUOTIENT IF
	;--------------IT IS MORE THAN 255 IN DECIMAL----------
	;---------------OR FF HEXA
	;MOV AX,0
DOUBLE:


	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,QUO
	
	MOV BH,0
	
	MOV BL,TEN4
	MOV CHECK51,BX
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV BX
	
	;problem here
	
	MOV RESMU2,AX
	MOV RESMU3,DX
	;6
	;MOV FIN,AX
	;DIV TEN3
	
	
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2  ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING1
	
	
SINGLE:

	MOV AH,0
	MOV AX,0
	MOV DX,0
	MOV AX,QUO
	
	DIV TEN4  ;problem here
	;MOV CHECK,AL
	;MOV CHECK1,AH
	MOV CHECK2,AL
	MOV CHECK3,AH
	;6
	;MOV FIN,AX
	;DIV TEN3
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AX,0
	MOV AH,0
	MOV AL,CHECK2 ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING2
	
	;SHL REM1,CL
	;SHL REM2,CL
	;SHL REM3,CL
	;SHL REM4,CL	

	
	

C5B:JMP C6	
	
	;OUTPUT MSG8 AH:09


PRINTING1:

	ADD REM,30H
	;ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,RESMU3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	JMP C5M1
	
	
PRINTING2:

	ADD REM,30H
	ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	;ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	JMP C5M1	

C5M1:
	
	;-------------DIVISION-----------

C6:CMP CHOICE,"d"
	JZ C7
	JNZ C8A

B1:JMP B2

C7:MOV AL,0H


	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H


	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H

	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGDIVLIM1
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGDID
	INT 21H


	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[0],AL
	
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[1],AL
	
		
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[2],AL
	
	
;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V7:
	CMP MUT1[BX],3AH
	INC BX
	JA PROM7
	LOOP V7
	JMP V7A

C8A:JMP C8A1	
PROM7:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR13:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR13	
	JMP C7
		
V7A:
	MOV BX,0
	MOV CX,3
	JMP V71A
	
V71A:
	CMP MUT1[BX],30H
	INC BX
	JB PROM7A
	LOOP V71A
	JMP S7
	
PROM7A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR14:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR14	
	JMP C7	
		
	
S7:
	SUB MUT1[0],30H
	SUB MUT1[1],30H
	SUB MUT1[2],30H
	
	
	
	
	;-----------INPUT FOR 2ND OPERAND-------------------
C7A:
	MOV AH, 09H
	LEA DX,MSGDIS
	INT 21H
	
	
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL
	JMP C7D1
	
	
C8A1:JMP C8B	
	
	
C7D1:	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
	
	;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V8:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM8
	LOOP V8
	JMP V8A
	
PROM8:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR15:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR15	
	JMP C7A
		
V8A:
	MOV BX,0
	MOV CX,3
	JMP V81A
	
V81A:
	CMP MUT2[BX],30H
	INC BX
	JB PROM8A
	LOOP V81A
	JMP S8
	
PROM8A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR16:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR16	
	JMP C7A	
		

S8:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	
	JMP C7M
	
	
C8B:JMP C7B		

	;--------------------------
C7M:
	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT1[0]
	MUL HUN
	
	MOV MUTOP1[0],AH 
	MOV MUT1[0],AL
	;--------------
	


	
	MOV AL ,MUT1[1]
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP1[1],AH
	MOV MUT1[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT1[0]
	MOV CH,MUTOP1[0]
	MOV AL,MUT1[1]
	MOV AH,MUTOP1[1]
	
	ADD AX,CX
	
	MOV MUT1[1],AL
	MOV MUTOP1[1],AH
	

	MOV AH,MUTOP1[1]
	MOV AL ,MUT1[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT1[1]
	MOV MUT1[2],AL
	
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	JMP C7D2
C7B:JMP C8C	
	
C7D2:
	MOV AL,MUT1[2]
	;MOV MTC2,AL
	MOV AH,MUTOP1[1]
	MOV CHECK51,AX
	
;------------------DIVIDE THE DIVIDEND WITH DIVSIOR----------	
	
	MOV AH,0
	MOV AH,0
	MOV AL,0
	MOV DX,0
	
	MOV BL,MUT2[2]
	MOV TEMP1,BL
	MOV BH,MUTOP2[1]
	MOV TEMP,BX
	;MOV BX,CX
	MOV AX,CHECK51
	
	MOV BL,TEMP1
	DIV BX
	;AAM
	;AAM
	MOV RESMU2,AX   ;9CH
	;MOV RES,AL   ;40h
	MOV RESMU3,DX


	
	
	CMP RESMU3,0H
	JA MUL10
	JE ZERO
	
	;------------------CALCULATE THE DECIMAL POINT-----------
MUL10:
	MOV AH,0
	MOV AH,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU3
	MUL TEN2
	MOV RESDI3,AL
	;MOV BL,MUT2[2]
	DIV TEMP
	MOV QUODI,AX
	MOV REMDI,DX
	
	MOV AX,REMDI
	MUL TEN2
	MOV RESDI4,AL
	;MOV BL,MUT2[2]
	DIV TEMP
	MOV QUODI1,AX
	MOV REMDI1,DX
	
	JMP COM

ADD10:	
	MOV AH,0
	MOV AH,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU3
	ADD AL,9H
	ADD AL,1H
	MOV RESDI2,AL
	MOV BL,MUT2[2]
	DIV BL
	MOV QUOD,AL
	MOV REMD,AH
	JMP COM
	
ZERO:

	MOV QUOD1,0
	MOV REMD1,0
	
	MOV QUOD,0
	MOV REMD,0
	JMP COM	
	
COM:

	CMP RESMU2,9H
	JA SECD
	JB PRINT
	

SECD:

	MOV AH,0
	MOV AH,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2
	


	;MOV AL,FIN
	DIV TEN
	;AAD
	MOV REM5,AH     ;23H
	;MOV CHECK,AL
	
	MOV QUO4,AL  ;28H
	
	
	
	CMP QUO4,09H
	JA DIVSION1
	JB PR3
	
DIVSION1: 
	

	MOV AX,0
	MOV AL,QUO4
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV TEN4
	MOV CHECK2,AL
	MOV CHECK3,AH

	
	MOV AL,CHECK2   ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH  
	;0
	JMP PRINT2
	
PR3:JMP PRINT3	
PRINT:
	MOV AH,0
	MOV AH,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2
	MOV RESMU5,AX
	;ADD QUO4,30H
	;SUB REM5,1
	ADD RESMU5,30H
	;ADD CHECK3,30H
	ADD REM2,30H
	MOV QUO4,0
	ADD QUO4,30H
	ADD QUODI1,30H
	ADD QUODI,30H
	
	
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO4
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,RESMU5
	INT 21H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DX,QUODI
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,QUODI1
	INT 21H	
	JMP C7M1
	
PRINT2:
	ADD CHECK2,30H
	;ADD QUO4,30H
	ADD CHECK3,30H
	ADD REM5,30H
	;ADD QUO2,30H
	ADD QUOD1,30H
	ADD QUOD,30H
	

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM5
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD1
	INT 21H	

	JMP C7M1

PRINT3:
	MOV AX,0
	MOV AH,0
	;MOV AL,RESDI
	;MOV REM5,AL
	;ADD QUO4,30H
	;SUB REM5,1
	ADD REM5,30H
	;ADD CHECK3,30H
	ADD REM2,30H
	;MOV QUO4,0
	ADD QUO4,30H
	ADD QUOD1,30H
	ADD QUOD,30H
	
	
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	


	

	
	MOV AX,0H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO4
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM5
	INT 21H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD1
	INT 21H	
	JMP C7M1

C8C:JMP C8	
	
	;OUTPUT MSG8 AH:09
C7M1:



	;JMP C9	

	;--------------EXPONENTS-------
C8:CMP CHOICE,"e"
	JZ C10
	JNZ C11Z
	
R2:JMP B1
	
C10: 

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H
	
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGEXO1
	INT 21H
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGEXO2
	INT 21H
	
	MOV AL,0H
	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGEXO3
	INT 21H

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[0],AL
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[1],AL
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[2],AL
	
	
	;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V9:
	CMP MUT1[BX],3AH
	INC BX
	JA PROM9
	LOOP V9
	JMP V9A
	
C11Z:JMP C11Z1
	
PROM9:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR17:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR17	
	JMP C10
		
V9A:
	MOV BX,0
	MOV CX,3
	JMP V91A
	
V91A:
	CMP MUT1[BX],30H
	INC BX
	JB PROM9A
	LOOP V91A
	JMP S9
	
PROM9A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR18:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR18	
	JMP C10
	
	
S9:
	SUB MUT1[0],30H
	SUB MUT1[1],30H
	SUB MUT1[2],30H
	
	;OUTPUT MSG7 AH:09
C10A:
	MOV AH, 09H
	LEA DX,MSGEXO4
	INT 21H
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	JMP P1

C11Z1:JMP C11
	
P1:	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V10:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM10
	LOOP V10
	JMP V10A
	
PROM10:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR19:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR19	
	JMP C10A
	
V10A:
	MOV BX,0
	MOV CX,3
	JMP V10BA
	
V10BA:
	CMP MUT2[BX],30H
	INC BX
	JB PROM10A
	LOOP V10BA
	JMP S10
	
PROM10A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
		MOV SI,0
	MOV CX,14
ARR20:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR20
	JMP C10A	
	
S10:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	JMP C10M
	
R3:JMP R2
C11:JMP C11A
	;--------------------------
C10M:
	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT1[0]
	MUL HUN
	
	MOV MUTOP1[0],AH 
	MOV MUT1[0],AL
	;--------------
	

	
	MOV AL ,MUT1[1]
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP1[1],AH
	MOV MUT1[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT1[0]
	MOV CH,MUTOP1[0]
	MOV AL,MUT1[1]
	MOV AH,MUTOP1[1]
	
	ADD AX,CX
	
	MOV MUT1[1],AL
	MOV MUTOP1[1],AH
	

	MOV AH,MUTOP1[1]
	MOV AL ,MUT1[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT1[1]
	MOV MUT1[2],AL
	
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	
	
	
	MOV BL,MUT1[2]
	;MOV MTC2,AL
	MOV BH,MUTOP1[1]
	
	MOV AL,MUT1[2]
	;MOV MTC2,AL
	MOV AH,MUTOP1[1]
	
	
	MOV CL,MUT2[2]
	;MOV MTC2,AL
	MOV CH,MUTOP2[1]
	MOV  TEMP,CX 
	SUB CX,1H

	
EXO:

	MUL BX
	LOOP EXO
	;AAM
	;AAM
	MOV RESM,AX    ;9CH
	;MOV RES,AL   ;40h
	MOV RESM2,AX

	
	

	;fail!!!!!
	;MOV CL,8
	;SHL RESM,CL





	MOV AX,0
	MOV AX,RESM
	
	
	DIV TEN2
	;AAD
	MOV REM,DX     ;23H
	;MOV CHECK,AL
	
	MOV QUO,AX   ;28H
	
	


	MOV AX,QUO
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	MOV CHECK2,AL
	MOV CHECK3,AH
	;6

	
	MOV AL,CHECK2   ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	

	;ADD QUO4,30H
	ADD REM,30H
	ADD CHECK3,30H
	ADD REM2,30H
	ADD QUO2,30H
	;ADD REM4,30H
	
	JMP C10M1

R2E:JMP R3	
C11A:JMP C11B	
	;OUTPUT MSG8 AH:09
C10M1:





	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	


	

	
	MOV AX,0H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	
	
	
	;JMP C9

C12C: JMP R2E	

	;----------------SQUARE ROOT----------
C11B: CMP CHOICE,"f"
	JZ C12
	JNZ C13F
	
	
C12:
	
	MOV AL,0H


	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H


	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H

	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGSQR
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSG6
	INT 21H



	
	
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL
	JMP C12D1
	
	
	
	
C12D1:	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V11:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM11
	LOOP V11
	JMP VA11
	
PROM11:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR21:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR21	
	JMP C12
	
VA11:
	MOV BX,0
	MOV CX,3
	JMP V11A
	
V11A:
	CMP MUT2[BX],30H
	INC BX
	JB PROM11A
	LOOP V11A
	JMP S11
	
PROM11A:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
	JMP ARR22
	
ARR22:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR22
	JMP C12
		
	
	
S11:

	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	
	JMP C12M
	
	


	;--------------------------
C12M:
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	JMP C12D2
	
	
C12D2:
	
	
	MOV BL,MUT2[2]
	MOV TEMP1,BL
	MOV BH,MUTOP2[1]
	MOV TEMP,BX
	;MOV BX,CX
	

	MOV BL,TEMP1
	
	
	
	
	
	
	JMP S1
	
S1:	
	
	
	MOV AX,BX
	ADD SQR,01H
    DIV SQR	
	MOV RESDI2,AH
	;MOV AH,0
	CMP AL,SQR
	JNZ S1
	JZ RT1
	

RT1:
	MOV SQR,0
	MOV RESDI,AL    ;9CH
	;MOV RES,AL   ;40h
	MOV RESDI2,AH


	
	
	CMP RESDI2,0H
	JA MUL101
	JE ZERO1
	
MUL101:
	MOV AH,0
	MOV AL,RESDI2
	MUL TEN4
	MOV RESDI3,AL
	;MOV BL,MUT2[2]
	DIV TEMP1
	MOV QUOD,AL
	MOV REMD,AH
	
	MOV AL,REMD
	MUL TEN4
	MOV RESDI4,AL
	;MOV BL,MUT2[2]
	DIV TEMP1
	MOV QUOD1,AL
	MOV REMD1,AH
	
	JMP COM1

ADD101:	
	MOV AH,0
	MOV AL,RESDI2
	ADD AL,9H
	ADD AL,1H
	MOV RESDI2,AL
	MOV BL,MUT2[2]
	DIV BL
	MOV QUOD,AL
	MOV REMD,AH
	JMP COM1
	
ZERO1:

	MOV QUOD1,0
	MOV REMD1,0
	
	MOV QUOD,0
	MOV REMD,0
	JMP COM1	
	
COM1:

	CMP RESDI,9H
	JA SECD1
	JB PRINTC
	

SECD1:

	MOV AX,0
	MOV AL,RESDI
	


	;MOV AL,FIN
	DIV TEN
	;AAD
	MOV REM5,AH     ;23H
	;MOV CHECK,AL
	
	MOV QUO4,AL  ;28H
	
	
	
	CMP QUO4,09H
	JA DIVSION12
	JB PR32
	
DIVSION12: 
	

	MOV AX,0
	MOV AL,QUO4
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV TEN4
	MOV CHECK2,AL
	MOV CHECK3,AH

	
	MOV AL,CHECK2   ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH  
	;0
	JMP PRINT2C
	
PR32:JMP PRINT3C	
PRINTC:
	MOV AX,0
	MOV AH,0
	MOV AL,RESDI
	MOV REM5,AL
	;ADD QUO4,30H
	;SUB REM5,1
	ADD REM5,30H
	;ADD CHECK3,30H
	ADD REM2,30H
	MOV QUO4,0
	ADD QUO4,30H
	ADD QUOD1,30H
	ADD QUOD,30H
	
	
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO4
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM5
	INT 21H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD1
	INT 21H	
	
	
PRINT2C:
	ADD CHECK2,30H
	;ADD QUO4,30H
	ADD CHECK3,30H
	ADD REM5,30H
	;ADD QUO2,30H
	ADD QUOD1,30H
	ADD QUOD,30H
	

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	

	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM5
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD1
	INT 21H	

	

PRINT3C:
	MOV AX,0
	MOV AH,0
	;MOV AL,RESDI
	;MOV REM5,AL
	;ADD QUO4,30H
	;SUB REM5,1
	ADD REM5,30H
	;ADD CHECK3,30H
	ADD REM2,30H
	;MOV QUO4,0
	ADD QUO4,30H
	ADD QUOD1,30H
	ADD QUOD,30H
	
	
	MOV AH, 09H
	LEA DX,MSG8
	INT 21H
	


	

	
	MOV AX,0H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO4
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM5
	INT 21H
	

	
	MOV AX,0H
	MOV AH,02H
	MOV DL,2EH
	INT 21H	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,QUOD1
	INT 21H	

;------------------------------Factorial------------
C13F:CMP CHOICE,"g"
	JZ C7F
	JNZ C14



C7F:MOV AL,0H





	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H


	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGFACLIM1
	INT 21H



	
	;-----------INPUT FOR 2ND OPERAND-------------------
C7AF:
	MOV AH, 09H
	LEA DX,MSGFAC
	INT 21H
	
	
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL
	JMP C7D1F
	
	
	
	
	
C7D1F:	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,21H
	INT 21H
	
	;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V8F:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM8F
	LOOP V8F
	JMP V8AF
	
PROM8F:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR15F:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR15F	
	JMP C7AF
		
V8AF:
	MOV BX,0
	MOV CX,3
	JMP V81AF
	
V81AF:
	CMP MUT2[BX],30H
	INC BX
	JB PROM8AF
	LOOP V81AF
	JMP S8F
	
PROM8AF:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR16F:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR16F	
	JMP C7AF
		

S8F:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	
	JMP C7MF
	
	
	

	;--------------------------
C7MF:
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	JMP C7D2F
	
	
C7D2F:
	MOV AL,MUT2[2]
	;MOV MTC2,AL
	MOV AH,MUTOP2[1]
	MOV CHECK51,AX
	MOV RESM,AX
	MOV RES2,AL
	MOV RES3,AL
	MOV TEMP4,AX
	;---------------------------FACTORIAL OPERATION SECTION-------
	;--------------------
	
	SUB CHECK51,0001H
	MOV CX,CHECK51

LOF1:
	
	MOV AL,0
	MOV AL,RES2
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES2,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM
	MOV BH,0
	MOV BL,RES2
	MUL BX
	MOV RESM,AX
	LOOP LOF1

	
	

	
	
	
	

;----------------DIVIDE THE RESULTS TO GET-------- 
;----------THE REMAINDER TO BE CONVERTED TO--------- 
;----------ASCII VALUE ---------------

	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	MOV AX,RESM
	
	;MUL HUN
	;MOV RESM,AL
	;MOV CL,RES
	;ADD AL,RES
	;MOV FIN,AL
	;MOV AX,CX

	;MOV AL,FIN
	DIV TEN2
	;AAD  
	MOV REM,DX     ;23H
	;MOV CHECK,AL
	
	MOV QUO,AX   ;28H
	
	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	CMP QUO,00FFH
	JB SINGLEF 
	JA DOUBLEF
	;MOV AX,0
	;MOV AH,REM
	;MOV CH,00H
	;MOV AX,QUO
	;MOV AX,QUO
	
	;MOV AX,CX
	;DIV TEN2
	;AAD
	;MOV QUO1,AX  ;0
	;--------------DIVIDE THE FIRST QUOTIENT IF
	;--------------IT IS MORE THAN 255 IN DECIMAL----------
	;---------------OR FF HEXA
	;MOV AX,0
DOUBLEF:


	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,QUO
	
	MOV BH,0
	
	MOV BL,TEN4
	MOV CHECK51,BX
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV BX
	
	;problem here
	
	MOV RESMU2,AX
	MOV RESMU3,DX
	;6
	;MOV FIN,AX
	;DIV TEN3
	
	
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2  ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING1F
	
	
SINGLEF:

	MOV AH,0
	MOV AX,0
	MOV DX,0
	MOV AX,QUO
	
	DIV TEN4  ;problem here
	;MOV CHECK,AL
	;MOV CHECK1,AH
	MOV CHECK2,AL
	MOV CHECK3,AH
	;6
	;MOV FIN,AX
	;DIV TEN3
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AX,0
	MOV AH,0
	MOV AL,CHECK2 ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING2F
	
	;SHL REM1,CL
	;SHL REM2,CL
	;SHL REM3,CL
	;SHL REM4,CL	

	
	


	
	;OUTPUT MSG8 AH:09


PRINTING1F:

	ADD REM,30H
	;ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,RESMU3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	JMP EMP
	
	
PRINTING2F:

	ADD REM,30H
	ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	;ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	


EMP:

	;--------------NPR probability -------
;------------------------------Factorial------------
C14:CMP CHOICE,"h"
	JZ C7FN
	JNZ C15



C7FN:MOV AL,0H





	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H


	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGFACLIM1
	INT 21H
	

C7N:MOV AL,0H



	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGNPR
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGONPR
	INT 21H


	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[0],AL
	
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[1],AL
	
		
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[2],AL
	
	
;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V7N:
	CMP MUT1[BX],3AH
	INC BX
	JA PROM7N
	LOOP V7N
	JMP V7AN

	
PROM7N:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR13N:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR13N	
	JMP C7N
		
V7AN:
	MOV BX,0
	MOV CX,3
	JMP V71AN
	
V71AN:
	CMP MUT1[BX],30H
	INC BX
	JB PROM7AN
	LOOP V71AN
	JMP S7N
	
PROM7AN:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
	
ARR14N:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR14N	
	JMP C7N	
		
	
S7N:
	SUB MUT1[0],30H
	SUB MUT1[1],30H
	SUB MUT1[2],30H
	JMP C7AFN
	
	

	
	;-----------INPUT FOR 2ND OPERAND-------------------
C7AFN:
		MOV AH, 02H
	MOV DL,50H
	INT 21H
	
	
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
	
	;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V8FN:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM8FN
	LOOP V8FN
	JMP V8AFN
	
PROM8FN:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR15FN:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR15FN	
	JMP C7AFN
		
V8AFN:
	MOV BX,0
	MOV CX,3
	JMP V81AFN
	
V81AFN:
	CMP MUT2[BX],30H
	INC BX
	JB PROM8AFN
	LOOP V81AFN
	JMP S8FN
	
PROM8AFN:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR16FN:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR16FN	
	JMP C7AFN
		

S8FN:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	
	JMP C7MFN
	
	
	

	;--------------------------
C7MFN:
	
	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT1[0]
	MUL HUN
	
	MOV MUTOP1[0],AH 
	MOV MUT1[0],AL
	;--------------
	


	
	MOV AL ,MUT1[1]
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP1[1],AH
	MOV MUT1[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT1[0]
	MOV CH,MUTOP1[0]
	MOV AL,MUT1[1]
	MOV AH,MUTOP1[1]
	
	ADD AX,CX
	
	MOV MUT1[1],AL
	MOV MUTOP1[1],AH
	

	MOV AH,MUTOP1[1]
	MOV AL ,MUT1[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT1[1]
	MOV MUT1[2],AL
	
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	JMP C7D2FN
	
	
C7D2FN:
	MOV AL,MUT1[2]
	;MOV MTC2,AL
	MOV AH,MUTOP1[1]
	MOV CHECK51,AX
	MOV RESM,AX
	MOV RES2,AL
	MOV TEMP3,AL
	MOV RES3,AL
	;MOV TEMP4,AX
	;---------------------------FACTORIAL OPERATION SECTION-------
	;--------------------
	
	SUB CHECK51,0001H
	MOV CX,CHECK51

LOF1N:
	
	MOV AL,0
	MOV AL,RES2
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES2,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM
	MOV BH,0
	MOV BL,RES2
	MUL BX
	MOV RESM,AX
	LOOP LOF1N
	
;------------------------2ND FACTORIAL-----------
	MOV AL,MUT2[2]
	;MOV MTC2,AL
	MOV AH,MUTOP2[1]
	MOV TEMP4,AX
	MOV RESM2,AX
	MOV RES4,AL
	MOV AL,TEMP3
	SUB AL,RES4
	MOV TEMP2,AL
	MOV RES5,AL
	MOV AH,0
	MOV AL,RES5
	MOV RESM2,AX
	
	
	SUB TEMP2,0001H
	MOV CL,TEMP2
	MOV CH,0
	

LOF2N:
	
	MOV AL,0
	MOV AL,RES5
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES5,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM2
	MOV BH,0
	MOV BL,RES5
	MUL BX
	MOV RESM2,AX
	LOOP LOF2N	
	

	MOV DX,0
	MOV AX,RESM
	DIV RESM2
	MOV RESM,AX
	
	
	

;----------------DIVIDE THE RESULTS TO GET-------- 
;----------THE REMAINDER TO BE CONVERTED TO--------- 
;----------ASCII VALUE ---------------

	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	MOV AX,RESM
	
	;MUL HUN
	;MOV RESM,AL
	;MOV CL,RES
	;ADD AL,RES
	;MOV FIN,AL
	;MOV AX,CX

	;MOV AL,FIN
	DIV TEN2
	;AAD  
	MOV REM,DX     ;23H
	;MOV CHECK,AL
	
	MOV QUO,AX   ;28H
	
	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	CMP QUO,00FFH
	JB SINGLEFN
	JA DOUBLEFN
	;MOV AX,0
	;MOV AH,REM
	;MOV CH,00H
	;MOV AX,QUO
	;MOV AX,QUO
	
	;MOV AX,CX
	;DIV TEN2
	;AAD
	;MOV QUO1,AX  ;0
	;--------------DIVIDE THE FIRST QUOTIENT IF
	;--------------IT IS MORE THAN 255 IN DECIMAL----------
	;---------------OR FF HEXA
	;MOV AX,0
DOUBLEFN:


	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,QUO
	
	MOV BH,0
	
	MOV BL,TEN4
	MOV CHECK51,BX
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV BX
	
	;problem here
	
	MOV RESMU2,AX
	MOV RESMU3,DX
	;6
	;MOV FIN,AX
	;DIV TEN3
	
	
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2  ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING1FN
	
	
SINGLEFN:

	MOV AH,0
	MOV AX,0
	MOV DX,0
	MOV AX,QUO
	
	DIV TEN4  ;problem here
	;MOV CHECK,AL
	;MOV CHECK1,AH
	MOV CHECK2,AL
	MOV CHECK3,AH
	;6
	;MOV FIN,AX
	;DIV TEN3
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AX,0
	MOV AH,0
	MOV AL,CHECK2 ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING2FN
	
	;SHL REM1,CL
	;SHL REM2,CL
	;SHL REM3,CL
	;SHL REM4,CL	

	
	


	
	;OUTPUT MSG8 AH:09


PRINTING1FN:

	ADD REM,30H
	;ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,RESMU3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	JMP EMP1
	
	
PRINTING2FN:

	ADD REM,30H
	ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	;ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	
EMP1:

	;--------------NPR probability -------
;------------------------------Factorial------------
C15:CMP CHOICE,"j"
	JZ C7FNC
	JNZ D5



C7FNC:MOV AL,0H





	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN2
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGWARN1
	INT 21H


	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGFACLIM1
	INT 21H
	

C7NC:MOV AL,0H



	;OUTPUT MSG7 AH:09
	MOV AH, 09H
	LEA DX,MSGNPR
	INT 21H

	;OUTPUT MSG6 AH:09
	MOV AH, 09H
	LEA DX,MSGONPR1
	INT 21H


	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[0],AL
	
	
	
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[1],AL
	
		
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H
	
	MOV MUT1[2],AL
	
	
;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V7NC:
	CMP MUT1[BX],3AH
	INC BX
	JA PROM7NC
	LOOP V7NC
	JMP V7ANC

	
PROM7NC:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR13NC:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR13NC	
	JMP C7NC
		
V7ANC:
	MOV BX,0
	MOV CX,3
	JMP V71ANC
	
V71ANC:
	CMP MUT1[BX],30H
	INC BX
	JB PROM7ANC
	LOOP V71ANC
	JMP S7NC
	
PROM7ANC:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
	
ARR14NC:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR14NC	
	JMP C7NC	
		
	
S7NC:
	SUB MUT1[0],30H
	SUB MUT1[1],30H
	SUB MUT1[2],30H
	JMP C7AFNC
	
	

	
	;-----------INPUT FOR 2ND OPERAND-------------------
C7AFNC:
	
	MOV AH, 02H
	MOV DL,43H
	INT 21H
	
	
	
	MOV AX,0
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[0],AL
	
	
	
	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[1],AL

	;INPUT BYTE AH:01
	MOV AH,01H
	INT 21H

	MOV MUT2[2],AL
	
	
	;------------VALIDATION-------------
	
	MOV BX,0
	
	MOV CX,3
	
V8FNC:
	CMP MUT2[BX],3AH
	INC BX
	JA PROM8FNC
	LOOP V8FNC
	JMP V8AFNC
	
PROM8FNC:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	MOV SI,0
	MOV CX,14
ARR15FNC:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR15FNC	
	JMP C7AFNC
		
V8AFNC:
	MOV BX,0
	MOV CX,3
	JMP V81AFNC
	
V81AFNC:
	CMP MUT2[BX],30H
	INC BX
	JB PROM8AFNC
	LOOP V81AFNC
	JMP S8FNC
	
PROM8AFNC:  
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	MOV SI,0
	MOV CX,14
ARR16FNC:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ARR16FNC	
	JMP C7AFNC
		

S8FNC:
	SUB MUT2[0],30H
	SUB MUT2[1],30H
	SUB MUT2[2],30H
	
	
	
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	
	JMP C7MFNC
	
	
	

	;--------------------------
C7MFNC:
	
	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT1[0]
	MUL HUN
	
	MOV MUTOP1[0],AH 
	MOV MUT1[0],AL
	;--------------
	


	
	MOV AL ,MUT1[1]
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP1[1],AH
	MOV MUT1[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT1[0]
	MOV CH,MUTOP1[0]
	MOV AL,MUT1[1]
	MOV AH,MUTOP1[1]
	
	ADD AX,CX
	
	MOV MUT1[1],AL
	MOV MUTOP1[1],AH
	

	MOV AH,MUTOP1[1]
	MOV AL ,MUT1[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT1[1]
	MOV MUT1[2],AL
	
	
	

	


	MOV AX,0
	; CONVERT THE VALUE THAT IS TREATED AS SINGLE TO VALUE
	MOV AL ,MUT2[0]
	MUL HUN
	
	MOV MUTOP2[0],AH  ;01H
	MOV MUT2[0],AL     ;2cH
	;--------------
	


	
	MOV AL ,MUT2[1]  ;0H  ,9H
	;MUL HUN
	;MOV OP2[1],AL
	MUL TEN
	MOV MUTOP2[1],AH
	MOV MUT2[1],AL
	;AAM
	MOV AH,0
	;MOV MUT2[1],AL
	;MOV AL,MUT2[0]
	
	
	MOV CL,MUT2[0]
	MOV CH,MUTOP2[0]
	MOV AL,MUT2[1]
	MOV AH,MUTOP2[1]
	
	ADD AX,CX
	
	MOV MUT2[1],AL
	MOV MUTOP2[1],AH
	

	MOV AH,MUTOP2[1]
	MOV AL ,MUT2[2]
	;MUL HUN
	;MOV OP2[2],AL
	;MUL TEN
	;MOV MUT2[2],AL
	;MOV AL,MUT2[1]
	ADD AL,MUT2[1]
	MOV MUT2[2],AL
	JMP C7D2FNC
	
	
C7D2FNC:
	MOV AL,MUT1[2]
	;MOV MTC2,AL
	MOV AH,MUTOP1[1]
	MOV CHECK51,AX
	MOV RESM,AX
	MOV RES2,AL
	MOV TEMP3,AL
	MOV RES3,AL
	;MOV TEMP4,AX
	;---------------------------FACTORIAL OPERATION SECTION-------
	;--------------------
	
	SUB CHECK51,0001H
	MOV CX,CHECK51

LOF1NC:
	
	MOV AL,0
	MOV AL,RES2
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES2,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM
	MOV BH,0
	MOV BL,RES2
	MUL BX
	MOV RESM,AX
	LOOP LOF1NC
	
;------------------------2ND FACTORIAL-----------
	MOV AL,MUT2[2]
	;MOV MTC2,AL
	MOV AH,MUTOP2[1]
	MOV TEMP4,AX
	MOV RESM3,AX
	MOV RESM2,AX
	MOV RES4,AL
	MOV AL,TEMP3
	SUB AL,RES4
	MOV TEMP2,AL
	MOV RES5,AL
	MOV AH,0
	MOV AL,RES5
	MOV RESM2,AX
	
	
	SUB TEMP2,0001H
	MOV CL,TEMP2
	MOV CH,0
	

LOF2NC:
	
	MOV AL,0
	MOV AL,RES5
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES5,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM2
	MOV BH,0
	MOV BL,RES5
	MUL BX
	MOV RESM2,AX
	LOOP LOF2NC	
	
	MOV CX,0
	SUB TEMP4,0001H
	MOV CX,TEMP4
	
LOF3NC:

	MOV AL,0
	MOV AL,RES4
	SUB AL,01H
	;MOV AX,RESM2
	MOV RES4,AL
	MOV AX,0
	MOV AH,0
	MOV AX,RESM3
	MOV BH,0
	MOV BL,RES4
	MUL BX
	MOV RESM3,AX
	LOOP LOF3NC
	
	MOV AX,RESM2
	MOV BX,RESM3
	MUL BX
	MOV RESM2,AX

	MOV DX,0
	MOV AX,RESM
	DIV RESM2
	MOV RESM,AX
	
	
	

;----------------DIVIDE THE RESULTS TO GET-------- 
;----------THE REMAINDER TO BE CONVERTED TO--------- 
;----------ASCII VALUE ---------------

	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	MOV AX,RESM
	
	;MUL HUN
	;MOV RESM,AL
	;MOV CL,RES
	;ADD AL,RES
	;MOV FIN,AL
	;MOV AX,CX

	;MOV AL,FIN
	DIV TEN2
	;AAD  
	MOV REM,DX     ;23H
	;MOV CHECK,AL
	
	MOV QUO,AX   ;28H
	
	
	MOV AH,0
	MOV AL,0
	MOV AX,0
	CMP QUO,00FFH
	JB SINGLEFNC
	JA DOUBLEFNC
	;MOV AX,0
	;MOV AH,REM
	;MOV CH,00H
	;MOV AX,QUO
	;MOV AX,QUO
	
	;MOV AX,CX
	;DIV TEN2
	;AAD
	;MOV QUO1,AX  ;0
	;--------------DIVIDE THE FIRST QUOTIENT IF
	;--------------IT IS MORE THAN 255 IN DECIMAL----------
	;---------------OR FF HEXA
	;MOV AX,0
DOUBLEFNC:


	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,QUO
	
	MOV BH,0
	
	MOV BL,TEN4
	MOV CHECK51,BX
	;MOV CHECK,AL
	;MOV CHECK1,AH
	DIV BX
	
	;problem here
	
	MOV RESMU2,AX
	MOV RESMU3,DX
	;6
	;MOV FIN,AX
	;DIV TEN3
	
	
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AX,RESMU2  ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	MOV AH,0
	MOV AX,0
	MOV AL,0
	MOV DX,0
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING1FNC
	
	
SINGLEFNC:

	MOV AH,0
	MOV AX,0
	MOV DX,0
	MOV AX,QUO
	
	DIV TEN4  ;problem here
	;MOV CHECK,AL
	;MOV CHECK1,AH
	MOV CHECK2,AL
	MOV CHECK3,AH
	;6
	;MOV FIN,AX
	;DIV TEN3
	;MOV FINR,AL
	;MOV FINR1,AH
	;MOV AX,0
	MOV AX,0
	MOV AH,0
	MOV AL,CHECK2 ;6H
	MOV CHECK,AL
	MOV CHECK1,AH
	DIV TEN4
	;AAD
	MOV QUO2,AL  ;0
	MOV REM2,AH    ;0
	
	
	MOV AL,QUO2  ;6H
	MOV AH,0
	DIV TEN4
	;AAD
	MOV QUO3,AL  ;0
	MOV REM3,AH    ;0
	JMP PRINTING2FNC
	
	;SHL REM1,CL
	;SHL REM2,CL
	;SHL REM3,CL
	;SHL REM4,CL	

	
	


	
	;OUTPUT MSG8 AH:09


PRINTING1FNC:

	ADD REM,30H
	;ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,RESMU3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	JMP EMP3
	
	
PRINTING2FNC:

	ADD REM,30H
	ADD CHECK3,30H
	ADD REM3,30H
	ADD REM2,30H
	ADD QUO3,30H
	;ADD RESMU3,30H

	MOV AH, 09H
	LEA DX,MSG8
	INT 21H

	
	MOV AX,0H
	

	MOV AX,0H
	MOV AH,02H
	MOV DL,QUO3
	INT 21H

	MOV AX,0H
	MOV AH,02H
	MOV DL,REM3
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,REM2
	INT 21H
	
	
	MOV AX,0H
	MOV AH,02H
	MOV DL,CHECK3
	INT 21H
	
	MOV AX,0H
	MOV AH,02H
	MOV DX,REM
	INT 21H
	
	
EMP3: 




	
	


D5: CMP CHOICE,"N"
	JE  C9
	JNE R101	

R101:
	MOV AH, 09H
	LEA DX,MSGV
	INT 21H
	
	
	MOV SI,0
	MOV CX,14
	JMP ERR2
ERR2:
	MOV AH,09H
	MOV BL,0EH
	MOV AL,MSGV1[SI]	
	INC SI
	INT 10H
	LOOP ERR2
	JMP C12C	







C9:	MOV AH,4CH
	INT 21H
	
	
	MAIN ENDP
	
END MAIN	
	
	